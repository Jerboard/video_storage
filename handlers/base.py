from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state


import json
from datetime import datetime

import db
from init import dp, TZ, bot
from utils.message_utils import proces_entities
from keayboards import inline_kb as kb


# –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@dp.message(CommandStart())
async def com_start(msg: Message, state: FSMContext):
    text = ('–ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥!\n'
            '–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –Ω–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã –∏–ª–∏ '
            '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n'
            '–í—Å—ë –ø—Ä–æ—Å—Ç: –∫–∏–¥–∞–π —Ñ–∏–ª—å–º—ã –∏–∑ –¢–ì, –∏ —Ç—ã, –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —Å–º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –Ω–∏–º.\n\n'
            '–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ª—é–±–∏–º—ã–π —Ñ–∏–ª—å–º –Ω–∞–∂–º–∏ "üîç –ü–æ–∏—Å–∫"')

    await msg.answer(text, reply_markup=kb.get_search_kb())


# –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–∏–¥–µ–æ
@dp.message(lambda msg: msg.video is not None)
async def add_video(msg: Message, state: FSMContext):
    await msg.delete()
    print(msg.video)

    if msg.video.file_name:
        split_title = msg.video.file_name.split('.')
        title = msg.video.file_name[:-1 - len(split_title[-1])].replace('_', ' ')
    else:
        title = '–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è'

    new_video_id = await db.add_video(
        user_id=msg.from_user.id,
        title=title,
        duration=msg.video.duration,
        thumb=msg.video.thumbnail.file_id,
        description=msg.caption,
        entities=proces_entities(msg.caption_entities),
        video_id=msg.video.file_id
    )

    await msg.answer('‚úÖ –í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')

    text = (f'{title}\n\n'
            f'{msg.caption}')

    await msg.answer_video(
        video=msg.video.file_id,
        caption=text,
        reply_markup=kb.get_edit_video_kb(new_video_id)
    )



